### 14.4.2 関数

<!-- Ignoring [elision], function signatures with lifetimes have a few constraint/rust-by-example[elision]:  -->
[省略][elision]をしない場合、ライフタイムのシグネチャ(e.g. `<'a>`)を持つ関数にはいくつかの制限があります。

<!-- * any reference *must* have an annotated lifetime.
* any reference being returned *must* have the same lifetime as an input or
be `static`. -->
* 全ての変数においてライフタイムを明示しなくてはならない。
* 返り値となる参照はすべて引数と同じライフタイムか、`static`ライフタイムを持たなくてはならない

<!-- Additionally, note that returning references without input is banned if it
would result in returning references to invalid data. The following example shows
off some valid forms of functions with lifetime/rust-by-example[elision]: -->
加えて、引数のない関数から参照を返す場合、それが結果的に無効なデータへの参照になるならば、禁止されている

<div id="active-code">
<button class="btn btn-primary" type="button" id="run-code">Run</button>
<button class="btn btn-primary" type="button" id="reset-code">Reset</button>
<div id="editor">// 引数として&#96;'a&#96;のライフタイムで参照を一つ取る。最低でもこの関数
// と同じだけの長さでなくてはならない。
fn print&#95;one&lt;'a&gt;(x: &'a i32) {
    println!("&#96;print&#95;one&#96;: x is {}", x);
}

// ミュータブルな参照でも同様
fn add&#95;one&lt;'a&gt;(x: &'a mut i32) {
    &#42;x += 1;
}

// 異なるライフタイムを持つ複数の引数がある場合。
// ここでは1種類のライフタイムでも問題はないが、より複雑なケースでは
// 異なるライフタイムが必要になる場合がある。
fn print&#95;multi&lt;'a, 'b&gt;(x: &'a i32, y: &'b i32) {
    println!("&#96;print&#95;multi&#96;: x is {}, y is {}", x, y);
}

// 受け取った参照をそのまま返すことに問題はないが、適切なライフタイム
// でなくてはならない。
fn pass&#95;x&lt;'a, 'b&gt;(x: &'a i32, &#95;: &'b i32) -&gt; &'a i32 { x }

//fn invalid&#95;output&lt;'a&gt;() -&gt; &'a i32 { &7 }
// &#96;'a&#96;は関数より長くなくてはならないため上の関数は正しくない。
// ここでは、&#96;&7&#96;は&#96;i32&#96;のデータとそれへの参照を作り出す。
// その後データはスコープを抜けるとともに破棄される。そのため、
// 不適切なデータに対する参照を返すことになってしまう。

fn main() {
    let x = 7;
    let y = 9;

    print&#95;one(&x);
    print&#95;multi(&x, &y);

    let z = pass&#95;x(&x, &y);
    print&#95;one(z);

    let mut t = 3;
    add&#95;one(&mut t);
    print&#95;one(&t);
}</div>
<div id="result"></div>
</div>

### See als/rust-by-example[elision]:

[functions][fn]

[elision]: /rust-by-example/scope/lifetime/elision.html
[fn]: /fn.html
